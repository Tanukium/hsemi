<!DOCTYPE html>

<html lang="ja">
<head>
<title><%= title %></title>
<meta charset="UTF-8" />
<style>
img.resize{
  width: auto;
  height: auto;
  max-width: 450px;
  max-height: 450px;
}
</style>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js"></script>
</head>

<body>

<div class="container">
<h1 id="開発日誌180618">開発日誌：180618</h1>
<h2 id="bootstrapを導入して本格開発の初めての一歩を踏み出す">Bootstrapを導入して、本格開発の初めての一歩を踏み出す</h2>
<hr />
<h3 id="bootstrapを使う">1. Bootstrapを使う</h3>
<hr />
<p>マルチプラットフォーム（モバイルデバイスとか）の汎用性も欠かせないと考えるため、<br />
サイトの見た目をモバイル向けにするフレームワークのBootstrapを導入した。<br />
さらに上級の機能がありそうだが、現在の段階ではまだ使う必要はないのでしばらく置いとく。</p>
<p>軽量化を求めたいので、今度は私がnpmじゃなくCDN方式でBootstrapを導入した。<br />
./viewにあるすべての.ejsファイルの中の、stylesheetを引用する内容を削除してから、下記の内容：</p>
<blockquote>
<pre><code>&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;  
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/css/bootstrap.min.css&quot;&gt;  
&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js&quot;&gt;&lt;/script&gt;  
&lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.0/umd/popper.min.js&quot;&gt;&lt;/script&gt;  
&lt;script src=&quot;https://maxcdn.bootstrapcdn.com/bootstrap/4.1.0/js/bootstrap.min.js&quot;&gt;&lt;/script&gt;</code></pre>
</blockquote>
<p>と記入したらサイトの様子は一気に<br />
<img class="resize" src="/images/180618-1.jpg" title="180618-1" alt="180618-1.jpg" /><br />
から<br />
<img class="resize" src="/images/180618-2.jpg" title="180618-2" alt="180618-2.jpg" /><br />
に変わってきた。<br />
モバイルデバイス（iPhone7, iOS11.3.1）でも<br />
<img class="resize" src="/images/180618-3.jpg" title="180618-3" alt="180618-3.jpg" /><br />
のように、うまく自動的にズームした。<br />
ただし、CDN方式なので、オンラインが必要である。オフライン状態でローカルアドレス（127.0.0.1）にアクセスすると<br />
stylesheetとフォントを全部読み取れなくなるという欠点もあるらしい。</p>
<h3 id="ページの上に1010の数字の行列を描く">2. ページの上に10*10の数字の行列を描く</h3>
<hr />
<p>サイトの建設は一段落したんだが、どこから表計算アプリの開発を着手し始めるについては困っていた。<br />
いろんなキーワードを使ってググったら、<br />
1. データベースの内容を表としてサイトに乗せる 2. データに基づき表ではなく図形のグラフをサイトに乗せる</p>
<p>のような内容しか出てこなかった。<br />
もともと私はマウスや入力欄を使って、何行かける何列の表を作れるアプリを開発したいが、<br />
上記のサーチ結果はその目的と全く違ったものだった。</p>
<p>そしてさらにサーチすると、かなり完成度の高い表計算Webアプリ（<a href="https://ethercalc.net/" title="EtherCalc">EtherCalc</a>）が出てきたが、<br />
完成度はさすがに高すぎてソースコードを全く読み取れなく理解できない。<br />
途方に暮れて悩んでいる中、先生から「Bootstrapを置いといて、<br />
まず10かける10の数字の行列をサイトに出力したら（乗せたら）どうか」とアドバイスしてくれて、私を煩悩から救い出した。</p>
<p>だが、RubyやPythonはともかく、JSでどうやって内容をconsoleではなくサイトに出力することまでわからなくて、<br />
やむを得なくもう一回「JSで10*10の数字行列を描く」という内容をググった。<br />
そこで、</p>
<blockquote>
<pre><code>&lt;script type=&quot;text/javascript&quot;&gt;
    window.onload = function() {
        var table = document.getElementById(&quot;demo&quot;);
        for( var i = 0; i &lt; 10; i++ ){
            var row = document.createElement(&quot;tr&quot;);
            for( var j = 0; j &lt; 10; j++ ){
                var col = document.createElement(&quot;td&quot;);
                col.innerHTML = (i*10)+j + 1; // assigning value to the cell
                row.appendChild(col);
            }
            table.appendChild(row);
        }
    };
&lt;/script&gt;</code></pre>
</blockquote>
<p>というサンプルコードを見つけた。実際に実験場に載せると、<br />
<img src="/images/180618-4.jpg" title="180618-4" alt="180618-4.jpg" /><br />
という結果が出て、無事に作動してるらしい。<br />
……とはいうものの、そのコードもよく理解できていない。どうやら自分の一番大きな問題はJSを使える力の不足みたいだ。<br />
前はちょっとW3CSchoolの教程を見ながら開発を進めたいと思ったが、今はもうそんな浅い考えをあきらめた。<br />
ES2015（ES6）基準に基づき改定された『JavaScript本格入門』という本があって、今週の金曜日に手元に到着する予定だ。<br />
それを読むとdocumentクラスは何か、その中のメソッド（getElementByIdとかinnerHTMLとかappendChildとか）<br />
の使い方などを理解できるようになるだろうと、わたしはそう祈っている。<br />
（tr、tdなどのタグはHTMLでテーブル（表）を作る文法で、<a href="http://www.w3school.com.cn/html/html_tables.asp" title="HTML 表格">W3CSchoolの教程</a>を見るだけで十分な気がする）</p>
<h3 id="次の目標">3. 次の目標</h3>
<hr />
<p>もし上のコードをうまく理解できるようになったら、私は今度数字を隠して枠線を出して、10*10の表を描きたいと思う。<br />
そしてそれができたら、さらに任意の行数かける任意の列数の表も作りたい。<br />
すべてうまくいけば、そのやり方を関数化（メソッド化）して次のステップ<br />
（作る表のスペースを定義する変数を、postする入力欄の添付）の基礎にしたいと考える。</p>
<h3 id="余談">余談</h3>
<hr />
<h4 id="thunderbirdを通して学校のメールサービスを利用する場合グーグルのメールサーバを設定できない不具合">（1） ThunderBirdを通して学校のメールサービスを利用する場合グーグルのメールサーバを設定できない不具合</h4>
<p>実は当初学校のメールサービスがこっそりとPOP3からIMAPに移行した時には、私がもうThunderBirdを使って</p>
<blockquote>
<pre><code>imap.nagano.ac.jp
smtp.nagano.ac.jp</code></pre>
</blockquote>
<p>（確かにそうだったけ？）というアドレスでIMAPプロトコルのキャンパスメールサービスを利用し始めた。<br />
学校全体のサービスがGSuiteに移行したら私も自然にThunderBirdのサーバ設置をGmailバージョンに切り替えようとした。<br />
しかしあの時何度試してもうまくいけず、しょうがなくしばらくあきらめたんだ。<br />
今回のゼミで先生の「キャンパスメールサービスのサーバはもうGmailに切り替えたぞ」とのお知らせを聞いて、<br />
私はすぐ中断したサーバ設置の切り替え作業を復旧し始めた。<br />
……しかし、前回とほぼ変わらず、またエラーが出てきちゃった。<br />
「いやー」と思いながら、そのエラーをとりあえずこちらでまとめてみる。</p>
<p>Gmailの提供した教程に従って、私は下記の設置をThunderBirdの中でした。<br />
<img src="/images/180618-5.jpg" title="180618-5" alt="180618-5.jpg" /><br />
このときデファルトのパスワードを使ったんだが、どうやら問題があるらしい。<br />
下の「詳細設定」ボタンを押すと、今度インターフェイスの右下に<br />
<img src="/images/180618-6.jpg" title="180618-6" alt="180618-6.jpg" /><br />
というポップアップが出ちゃって、一つのサイトアドレスを手に入れた。<br />
そのサイトにアクセスすると、Googleが今の問題の解決策をいくつか提供してくれた。<br />
<img src="/images/180618-8.jpg" title="180618-8" alt="180618-8.jpg" /><br />
ThunderBirdは最新バージョンだし、わたしは最近パスワードを変えたことはないし、<br />
問題はどうみてもアプリパスワードの使用か、安全性の低いアプリのアクセスを許可するかで解決できそうな気がする。</p>
<p>二段階パスワード認証を設置して、アプリごとに変わるランダムな「アプリパスワード」を生成した。<br />
しかし、そのパスワードを使っても、また<br />
<img src="/images/180618-7.jpg" title="180618-7" alt="180618-7.jpg" />と<img src="/images/180618-6.jpg" title="180618-6" alt="180618-6.jpg" /><br />
のエラーが出ちゃった。なんだかこの方向ではないらしい。</p>
<p>では、安全性の低いアプリのアクセスを許可したらどうかな。<br />
解決策のページの「安全性の低い…」というリンクをクリックすると、さらに<br />
<img src="/images/180618-9.jpg" title="180618-9" alt="180618-9.jpg" /><br />
が出てきた。そこの「安全性の低いアプリ」というリンクをクリックすると、なんと……<br />
<img src="/images/180618-10.jpg" title="180618-10" alt="180618-10.jpg" /><br />
……というページが出ちゃった。<br />
もう私の手で解決できない問題になったらしいので、とにかくこちらで報告させていただく。</p>
<h4 id="キャンパスネットでクラウド側の本サイトhttpmama51go.com3000にアクセスできない不具合">（2） キャンパスネットでクラウド側の本サイト（http://mama51go.com:3000）にアクセスできない不具合</h4>
<p>より便利に自分の開発成果を先生やこのプロジェクトに興味を持つ方にシェアするために、<br />
私は現在メンテナンスしている姉のクラウドサーバを使ってリモートのサイト立てた。<br />
サイトのアドレスは<a href="http://mama51go.com:8080/" title="サイト">http://mama51go.com:8080</a>だが、なんだかキャンパスネットでうまくそこにアクセスできないらしい。<br />
毎回必ず「ERR_CONNECTION_TIMED_OUT」というエラーが出るんだが、外部のネットを使ったら全然問題なしアクセスできる。<br />
問題はいったい何かな……それも私の力で解決できないことなので、こちらにまとめて報告させていただく。</p>
<h4 id="クラウドについての雑談">（3） クラウドについての雑談</h4>
<p>さきも書いたんだが、今自分でメンテナンスしている姉のクラウドサーバ（のごく一部のスペース）を拝借している。<br />
姉はあまりパソコンに詳しくなく、ただ通販サイトを載せるサーバがほしいので<br />
サーバの初期設定やhttpd.confの配置は全部私がしてあげた。<br />
だいぶ昔（中学の時）Fedora11ぐらい使ったことがあるが、この間あまりRedHat系を触れることはない上<br />
debian系の安定性を考えてubuntu serverというLinuxのリリースを選んだ。<br />
ssh-keygenでSSH用のキーペアを作って、puttyのSSH Key Agentを使って秘密鍵を.ppkの拡張子のファイルに転換して、<br />
id_rsa.pubという公開鍵ファイルの中の内容をすべてリモートサーバの~/.ssh/authorized_keysというファイルに書き込めば<br />
SSHとSFTPプロトコルで、Putty+Filezillaでリモート側のターミナルを開いたり、<br />
リモート側にファイルをアップロード（あるいはそこからファイルをダウンロードしたり）できるようになる。<br />
それから、apache2やphp・php_modをインストールして、virtual siteというapache2の特性を利用して<br />
/var/wwwの下にドメインフォルダを作り出して、ネットのテンプレートを参照してドメイン独自のhttpd配置ファイルを書いた。<br />
そしてプロジェクトを載せるために、git、node.js、npmとpm2などのツールもインストールした。<br />
現在サーバでのプロジェクトの運行状況はこうである。<br />
<img src="/images/180618-11.jpg" title="180618-11" alt="180618-11.jpg" /></p>
<hr />
<p><a href="/blog" title="ブログ">前のページに戻る</a></p>
</div>

</body>
</html>
