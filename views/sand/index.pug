extends ../layout

block script
  script(type="text/javascript").
    globalindex = ['名前', '学年', '性別', '単位数'];

    let saveTable = () => { 
      let table = {
        index: globalindex, 
        row: #{row}, 
        col: globalindex.length
      };
      let input = new Object;

      for(let i = 0; i < #{row}; i++ ){
        for(let j = 0; j < globalindex.length; j++){
          input = $('.'+i+'\\:'+j)[0];
          table[i+':'+j] = input.value;
        };
      };
      return(table);
    };

    function downloadFile (options) {
      let config = $.extend(true, {method: 'post'}, options);
      let $iframe = $('<iframe id="down-file-iframe" />');
      let $form = $('<form target="down-file-iframe" />');
      $form.attr('method', config.method);
      $form.attr('action', config.url);
      for (let key in config.data) {
        $form.append('<input type="hidden" name="' + key + '" value="' + config.data[key] + '" />');
      }
      $iframe.append($form);
      $(document.body).append($iframe);
      $form[0].submit();
      $iframe.remove();
    };

    $(function() {
      let nameCheck = (str) => {
        return(str.match(/^[\u30a0-\u30ff\u3040-\u309f\u3005-\u3006\u30e0-\u9fcf]+$/)) ? false : true
      };
      let semiCheck = (str) => {
        return(str.match(/^[1-4]$/)) ? false : true
      };
      let genderCheck = (str) => {
        return(str.match(/^[\u7537\u5973]$/)) ? false : true
      };
      let creditCheck = (str) => {
        return(str.match(/^12[0-5]$|^1[0-1][0-9]$|^[1-9][0-9]$|^[0-9]$/)) ? false : true
      };

      function inputClassCheck(item) {
        if (item.id === globalindex[0] && nameCheck(item.value)) {
          item.value = null;
        } else if (item.id === globalindex[1] && semiCheck(item.value)) {
          item.value = null;
        } else if (item.id === globalindex[2] && genderCheck(item.value)) {
          item.value = null;
        } else if (item.id === globalindex[3] && creditCheck(item.value)) {
          item.value = null;
        };
      };

      let inputs = Array.from($("#demo input"));
      inputs.forEach(function(input) {
        $(input).on("change", function() {
          //console.log($(input)[0].value);
          inputClassCheck($(input)[0]);
        });
      });
    });

block content
  - let index = ['名前', '学年', '性別', '単位数'];
  :markdown-it
    # 実験場
  table(id='demo')
    tr
      td= index[0]
      td= index[1]
      td= index[2]
      td= index[3]
    - for(let i = 0; i < row; i++)
      tr
      - for( let j = 0; j < index.length; j++)
        td
          if j == 0
            input(id=index[0] class=i+':'+j type="text" size="10")
          else if j == 1
            input(id=index[1] class=i+':'+j type="text" size="5")
          else if j == 2
            input(id=index[2] class=i+':'+j type="text" size="5")
          else if j == 3
            input(id=index[3] class=i+':'+j type="text" size="5")
  br
  form(action='#' method='get')
    label 行数：
    input(type='text' name='row')
    | 
    input(type='submit' value='生成')
  button(onclick='downloadFile({url: "/csv", data: saveTable()});') 保存
  :markdown-it
    
    ***

    [前のページに戻る][]

    [前のページに戻る]: / "ホームページ"
